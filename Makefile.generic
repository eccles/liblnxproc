
.SUFFIXES: .c .o .so

CC=gcc
CCFLAGSD=-DDEBUG=1 -g
CCFLAGS1=-I../src -Wall
CCFLAGS2=$(CCFLAGS1) -fpic
#CCFLAGS=-g -fpic -I. -Wall
LDFLAGS1=-L. -llnxproc
LDFLAGS2=-L. -llnxproc-dbg
DBLIB=-ltdb
SOFLAGS=-shared
OBJS=$(SRCS:.c=.o)
OBJSDBG=$(SRCS:.c=-dbg.o)
#TGT1=$(patsubst %,$(BIN)/%,$(SRCS))
#TGT2=$(patsubst %,$(BIN)/%,$(OBJS))
#TARGETS=$(TGT1) $(TGT2)

%.o: %.c $(HDRS)
	$(CC) $(CCFLAGS2) -c $< -o $@

%-dbg.o: %.c $(HDRS)
	$(CC) $(CCFLAGSD) $(CCFLAGS2) -c $< -o $@

all: $(BIN) $(BIN)-dbg
	for d in $(DIRS); do (cd $$d; $(MAKE) ); done

$(LIB).so: $(OBJS)
	$(CC) $(SOFLAGS) -o $@ $^ $(DBLIB)

$(LIB)-dbg.so: $(OBJSDBG)
	$(CC) $(SOFLAGS) -o $@ $^ $(DBLIB)

$(BIN): $(BIN).c $(LIB).so
	$(CC) $(CCFLAGS1) -o $@ $^ $(LDFLAGS1) 

$(BIN)-dbg: $(BIN).c $(LIB)-dbg.so
	$(CC) $(CCFLAGSD) $(CCFLAGS1) -o $@ $^ $(LDFLAGS2)

check: $(HDRS) $(SRCS)
	for d in $(DIRS); do (cd $$d; $(MAKE) check ); done
	$(RELDIR)/check.sh $(BIN).c $(HDRS) $(SRCS) $(PUBHDIR)

clean:
	for d in $(PUBHDIR); do (cd $$d; rm -f *~ ); done
	rm -f $(BIN) $(BIN)-dbg *.o *.so *~ *.orig core* vgcore* x y z

